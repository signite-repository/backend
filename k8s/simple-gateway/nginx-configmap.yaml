apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-gateway-config
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        upstream category-service {
            server category-mock-service:80;
        }
        
        upstream post-service {
            server post-mock-service:80;
        }
        
        upstream comment-service {
            server comment-mock-service:80;
        }
        
        upstream nested-api {
            server nested-api-service:80;
        }
        
        server {
            listen 80;
            
            # CORS 설정 추가
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
            
            # OPTIONS 요청 처리
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # Nested API Routes (더 구체적인 패턴을 먼저 매칭)
            location ~ ^/api/v1/categories/(\d+)/posts/(\d+)/comments$ {
                rewrite ^/api/v1/categories/(\d+)/posts/(\d+)/comments$ /categories-$1-posts-$2-comments.json break;
                proxy_pass http://nested-api;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }
            
            location ~ ^/api/v1/categories/(\d+)/posts$ {
                rewrite ^/api/v1/categories/(\d+)/posts$ /categories-$1-posts.json break;
                proxy_pass http://nested-api;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }
            
            location ~ ^/api/v1/posts/(\d+)/comments$ {
                rewrite ^/api/v1/posts/(\d+)/comments$ /posts-$1-comments.json break;
                proxy_pass http://nested-api;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }
            
            # 기본 API Routes
            location /api/v1/categories {
                rewrite ^/api/v1/categories(.*) /$1 break;
                proxy_pass http://category-service;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }
            
            location /api/v1/posts {
                rewrite ^/api/v1/posts(.*) /$1 break;
                proxy_pass http://post-service;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }
            
            location /api/v1/comments {
                rewrite ^/api/v1/comments(.*) /$1 break;
                proxy_pass http://comment-service;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }
            
            location / {
                proxy_pass http://category-service;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }
        }
    }