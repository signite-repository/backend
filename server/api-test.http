### Signite Backend API 테스트
### 로컬 개발 환경: http://localhost:8080

### 1. 헬스체크 - 서버 상태 확인
GET http://localhost:8080/api/test/health
Accept: application/json

### 2. 인증 테스트 - 인증 없이 접근
GET http://localhost:8080/api/test/auth
Accept: application/json

### 3. 권한 테스트 - ACTIVE_MEMBER 권한 체크
GET http://localhost:8080/api/test/role?role=ACTIVE_MEMBER
Accept: application/json

### 4. 회원가입 테스트
POST http://localhost:8080/api/auth/register
Content-Type: application/json

{
  "username": "testuser",
  "password": "testpassword123"
}

### 5. 로그인 테스트
POST http://localhost:8080/api/auth/login
Content-Type: application/json

{
  "username": "testuser", 
  "password": "testpassword123"
}

### 6. 카테고리 목록 조회
GET http://localhost:8080/api/category
Accept: application/json

### 7. 카테고리 캐시 조회
GET http://localhost:8080/api/category/cache
Accept: application/json

### 8. 태그 목록 조회
GET http://localhost:8080/api/tag
Accept: application/json

### 9. 게시글 경로 목록
GET http://localhost:8080/api/post/path
Accept: application/json

### 10. JWT 토큰을 사용한 프로필 조회 (로그인 후 Authorization 헤더 필요)
GET http://localhost:8080/api/auth/profile
Accept: application/json
Authorization: Bearer YOUR_JWT_TOKEN_HERE

### 11. 게시글 작성 (관리자 권한 필요)
POST http://localhost:8080/api/post
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN_HERE

{
  "title": "테스트 게시글",
  "summary": "테스트 요약",
  "content": "테스트 내용입니다.",
  "images": "test.jpg",
  "categoryTitle": "테스트 카테고리",
  "tags": "Kotlin#Spring#Test"
}

### 12. 특정 게시글 조회
GET http://localhost:8080/api/post/1
Accept: application/json

### 13. 댓글 조회 (게시글 ID = 1)
GET http://localhost:8080/api/comment/1
Accept: application/json

### 14. 댓글 작성 (인증 필요)
POST http://localhost:8080/api/comment/1
Content-Type: application/json
Authorization: Bearer YOUR_JWT_TOKEN_HERE

{
  "content": "테스트 댓글입니다."
}

### 15. NATS 이벤트 테스트를 위한 데이터 생성
### (실제로는 백그라운드에서 이벤트가 발행됨)

### 16. OIDC 설정 조회 (MSA 환경용)
GET http://localhost:8080/.well-known/openid_configuration
Accept: application/json

### 17. JWKS 조회 (JWT 검증용)
GET http://localhost:8080/.well-known/jwks.json
Accept: application/json 